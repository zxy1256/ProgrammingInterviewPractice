import java.util.Vector;
import java.util.List;
import java.util.Arrays;
import java.lang.StringBuilder;

public class Ch2_1 {
    static public void main(String[] argv) {
        Matrix m = new Matrix(5, 3, 1.0);
        m.set(1,1,0.0);
        System.out.println(m);

        resetCrossIfZero(m);
        System.out.println(m);
    }

    public void resetCrossIfZero(Matrix m) {
        List<int> size = m.getSize();
        int row_limit = size.get(0);
        int column_limit = size.get(1);
        List<int> rows = new List<int>();
        List<int> columns = new List<int>();

        for (int i = 0; i < row_limit; i++) {
            for (int j = 0; j < column_limit; j++) {
                if (m.get(i,j) == 0.0) {
                    rows.add(i);
                    columns.add(j);
                }
            }
        }
        
        for (int i = 0; i < rows.size(); i++) {
            m.resetCross(rows.get(i), columns.get(i));
        }
    }
}

class Matrix  {
    private Vector<Vector<Double>> matrix;
    private int row_num;
    private int column_num;

    public Matrix(final int row_num, final int column_num) {
        this(row_num, column_num, 0.0);
    }

    public Matrix(final int row_num, final int column_num, final double init_value) {
        this.row_num = row_num;
        this.column_num = column_num;
        matrix = new Vector<Vector<Double>>(row_num);
        for (int i = 0; i < row_num ; i++) {
            Vector<Double> row = new Vector<Double>(column_num);
            for (int j = 0; j < column_num; j++) {
                row.add(init_value);
            }
            matrix.add(row);
        }
    }

    public double get(final int i, final int j) {
        Vector<Double> row = matrix.get(i);
        return row.get(j);
    }

    public List<Int> getSize() {
        return Arrays.asList(row_num, column_num);
    }

    public void set(final int i, final int j, final double value) {
        matrix.get(i).set(j,value);
    }

    public String toString() {
        StringBuilder stringBuilder = new StringBuilder();
        for (int i = 0; i < row_num; i++) {
            for (int j = 0; j < column_num; j++) {
                stringBuilder.append(get(i,j)).append(" ");
            }
            stringBuilder.append("\n");
        }
        return stringBuilder.toString();
    }

    public void resetCross(final int row, final int column) {
        for (int j = 0; j < column_num; j++) {
            set(row, j, 0.0);
        }
        for (int i = 0; i < row_num; i++) {
            set(i, column, 0.0);
        }
    }

}
